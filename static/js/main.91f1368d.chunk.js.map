{"version":3,"sources":["components/General.js","components/Education.js","components/Experience.js","components/CompletedForm.js","components/Main.js","App.js","index.js"],"names":["General","props","data","firstName","lastName","phone","city","state","email","personalStatement","className","onSubmit","submitGeneral","id","htmlFor","name","value","onChange","handleChange","required","Education","data-id","onClick","deleteSection","data-directory","data-index","school","yearStart","yearEnd","complete","Experience","company","startDate","endDate","responsibilities","CompletedForm","general","education","experience","console","log","linkedIn","map","item","eduObj","expObj","Main","eduCount","expCount","saved","bind","addSection","saveEdit","event","target","dataset","directory","this","setState","prevState","newEduArray","parseInt","index","newExpArray","newEduCount","newEduObj","newEduArr","newExpCount","newExpObj","newExpArr","setTimeout","_newEduArr","filter","edu","exp","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qWA8EeA,EA3EC,SAACC,GAAW,IAAD,EASnBA,EAAMC,KAPNC,EAFmB,EAEnBA,UACAC,EAHmB,EAGnBA,SACAC,EAJmB,EAInBA,MACAC,EALmB,EAKnBA,KACAC,EANmB,EAMnBA,MACAC,EAPmB,EAOnBA,MACAC,EARmB,EAQnBA,kBAGJ,OACI,qBAAKC,UAAU,UAAf,SACI,uBAAMC,SAAUV,EAAMW,cAAeC,GAAG,cAAxC,UACI,uBAAOC,QAAQ,YAAf,wBACA,uBACIJ,UAAU,YACVK,KAAK,YACLC,MAAOb,EACPc,SAAUhB,EAAMiB,aAChBC,UAAQ,IAEZ,uBAAOL,QAAQ,WAAf,uBACA,uBACIJ,UAAU,WACVK,KAAK,WACLC,MAAOZ,EACPa,SAAUhB,EAAMiB,aAChBC,UAAQ,IAEZ,uBAAOL,QAAQ,OAAf,kBACA,uBACIJ,UAAU,OACVK,KAAK,OACLC,MAAOV,EACPW,SAAUhB,EAAMiB,aAChBC,UAAQ,IAEZ,uBAAOL,QAAQ,QAAf,mBACA,uBACIJ,UAAU,QACVK,KAAK,QACLC,MAAOT,EACPU,SAAUhB,EAAMiB,aAChBC,UAAQ,IAEZ,uBAAOL,QAAQ,QAAf,qBACA,uBACIJ,UAAU,QACVK,KAAK,QACLC,MAAOX,EACPY,SAAUhB,EAAMiB,aAChBC,UAAQ,IAEZ,uBAAOL,QAAQ,QAAf,mBACA,uBACIJ,UAAU,QACVK,KAAK,QACLC,MAAOR,EACPS,SAAUhB,EAAMiB,aAChBC,UAAQ,IAEZ,uBAAOL,QAAQ,oBAAf,gCACA,0BACIJ,UAAU,oBACVK,KAAK,oBACLC,MAAOP,EACPQ,SAAUhB,EAAMiB,aAChBC,UAAQ,UCfbC,G,MArDG,SAACnB,GAEf,OACI,sBAAKS,UAAU,YAAf,UACI,wBACIA,UAAU,YACVK,KAAK,YACLM,UAASpB,EAAMC,KAAKW,GACpBS,QAASrB,EAAMsB,cAJnB,eAQA,uBAAMV,GAAIZ,EAAMC,KAAKW,GAAIH,UAAU,UAAnC,UACI,4CACA,uBACIK,KAAK,SACLS,iBAAe,YACfC,aAAYxB,EAAMC,KAAKW,GACvBG,MAAOf,EAAMC,KAAKwB,OAClBT,SAAUhB,EAAMiB,eAGpB,gDACA,uBACIH,KAAK,YACLS,iBAAe,YACfC,aAAYxB,EAAMC,KAAKW,GACvBG,MAAOf,EAAMC,KAAKyB,UAClBV,SAAUhB,EAAMiB,eAGpB,8CACA,uBACIH,KAAK,UACLS,iBAAe,YACfC,aAAYxB,EAAMC,KAAKW,GACvBG,MAAOf,EAAMC,KAAK0B,QAClBX,SAAUhB,EAAMiB,eAGpB,qDACA,uBACIH,KAAK,WACLS,iBAAe,YACfC,aAAYxB,EAAMC,KAAKW,GACvBG,MAAOf,EAAMC,KAAK2B,SAClBZ,SAAUhB,EAAMiB,uBCMrBY,G,MApDI,SAAC7B,GAChB,OACI,sBAAKS,UAAU,aAAf,UACK,wBACDA,UAAW,YACXK,KAAK,aACLM,UAASpB,EAAMC,KAAKW,GACpBS,QAASrB,EAAMsB,cAJd,eAMD,uBAAMV,GAAIZ,EAAMC,KAAKW,GAAIH,UAAU,UAAnC,UACI,6CACA,uBACIK,KAAK,UACLS,iBAAe,aACfH,UAASpB,EAAMC,KAAKW,GACpBG,MAAOf,EAAMC,KAAK6B,QAClBd,SAAUhB,EAAMiB,eAGpB,gDACA,uBACIH,KAAK,YACLS,iBAAe,aACfH,UAASpB,EAAMC,KAAKW,GACpBG,MAAOf,EAAMC,KAAK8B,UAClBf,SAAUhB,EAAMiB,eAGpB,8CACA,uBACIH,KAAK,UACLS,iBAAe,aACfH,UAASpB,EAAMC,KAAKW,GACpBG,MAAOf,EAAMC,KAAK+B,QAClBhB,SAAUhB,EAAMiB,eAGpB,sDACA,0BACIH,KAAK,mBACLS,iBAAe,aACfH,UAASpB,EAAMC,KAAKW,GACpBG,MAAOf,EAAMC,KAAKgC,iBAClBjB,SAAUhB,EAAMiB,uB,MCHrBiB,MAxCf,SAAuBlC,GAAQ,IAEnBmC,EAAmCnC,EAAnCmC,QAASC,EAA0BpC,EAA1BoC,UAAWC,EAAerC,EAAfqC,WAG5B,OAFAC,QAAQC,IAAIH,GAGR,gCACI,sBAAK3B,UAAU,UAAf,UACI,+BAAK0B,EAAQjC,UAAb,IAAyBiC,EAAQhC,YACjC,4BAAIgC,EAAQ/B,QACZ,8BAAI+B,EAAQ9B,KAAZ,KAAoB8B,EAAQ7B,SAC5B,4BAAI6B,EAAQ5B,QACZ,4BAAI4B,EAAQK,WACZ,4BAAIL,EAAQ3B,uBAEhB,sBAAKC,UAAU,YAAf,UACI,4CACC2B,EAAUK,KAAI,SAAAC,GACX,OAAQ,sBAAKjC,UAAU,SAAf,UACJ,6BAAKiC,EAAKjB,SACV,8BAAIiB,EAAKhB,UAAT,MAAuBgB,EAAKf,WAC5B,4BAAIe,EAAKd,aAHwBc,EAAK9B,UAOlD,sBAAKH,UAAU,aAAf,UACI,6CACC4B,EAAWI,KAAI,SAAAC,GACZ,OAAQ,sBAAKjC,UAAU,UAAf,UACJ,6BAAKiC,EAAKZ,UACV,8BAAIY,EAAKX,UAAT,MAAuBW,EAAKV,WAC5B,4BAAIU,EAAKT,qBAHyBS,EAAK9B,cCxBzD+B,EAAS,CACX/B,GAAI,EACJa,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,SAAU,IAGRgB,EAAS,CACXhC,GAAI,EACJkB,QAAS,GACTC,UAAW,GACXC,QAAS,GACTC,iBAAkB,IAgMPY,E,kDA5LX,aAAe,IAAD,8BACV,gBACKvC,MAAQ,CACT6B,QAAS,CACLjC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,kBAAmB,IAEvB4B,UAAW,GACXC,WAAY,GACZS,SAAU,EACVC,SAAU,EACVC,OAAO,GAEX,EAAK/B,aAAe,EAAKA,aAAagC,KAAlB,gBAEpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAK3B,cAAgB,EAAKA,cAAc2B,KAAnB,gBACrB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBAtBN,E,gDA0Bd,SAAaG,GAAQ,IAAD,EACiBA,EAAMC,OAA/BvC,EADQ,EACRA,KAAMC,EADE,EACFA,MAAOuC,EADL,EACKA,QACK,cAAtBA,EAAQC,WACRC,KAAKC,UAAS,SAAAC,GACV,IAAMC,EAAcD,EAAUtB,UAE9B,OADAuB,EAAYC,SAASN,EAAQO,QAAQ/C,GAAQC,EACtC,CACHqB,UAAWuB,MAGnBrB,QAAQC,IAAIiB,KAAKlD,QAEU,eAAtBgD,EAAQC,WACbC,KAAKC,UAAS,SAAAC,GACV,IAAMI,EAAcJ,EAAUrB,WAE9B,OADAyB,EAAYF,SAASN,EAAQ1C,KAAKE,GAAQC,EACnC,CACHsB,WAAYyB,MAGpBxB,QAAQC,IAAIiB,KAAKlD,QAEhBkD,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC7BvB,QAAQ,2BACDuB,EAAUvB,SADV,kBAEFrB,EAAOC,QAGhBuB,QAAQC,IAAIiB,KAAKlD,S,wBAYrB,SAAW8C,GAAQ,IAAD,OAED,cADIA,EAAMC,OAAfvC,MAEJ0C,KAAKC,UAAS,SAAAC,GACV,IAAMK,EAAcL,EAAUZ,SAAW,EACnCkB,EAAS,eAAQrB,GACvBqB,EAAUpD,GAAK8C,EAAUZ,SACzB,IAAMmB,EAAS,sBAAOP,EAAUtB,WAAjB,CAA4B4B,IAC3C,OAAO,2BACAN,GADP,IAEItB,UAAW6B,EACXnB,SAAUiB,OAGlBzB,QAAQC,IAAIiB,KAAKlD,MAAMwC,YAGvBU,KAAKC,UAAS,SAAAC,GACV,IAAMQ,EAAcR,EAAUX,SAAW,EACnCoB,EAAS,eAAQvB,GACvBuB,EAAUvD,GAAK8C,EAAUX,SACzB,IAAMqB,EAAS,sBAAOV,EAAUrB,YAAjB,CAA6B8B,IAC5C,OAAO,2BACAT,GADP,IAEIrB,WAAY+B,EACZrB,SAAUmB,OAGlBG,YAAW,kBAAM/B,QAAQC,IAAI,EAAKjC,SAAQ,Q,2BAKlD,SAAc8C,GACVd,QAAQC,IAAI,WADK,MAESa,EAAMC,OAAxBvC,EAFS,EAETA,KAAMwC,EAFG,EAEHA,QACdhB,QAAQC,IAAIe,EAAQ1C,IACP,cAATE,EACA0C,KAAKC,UAAS,SAAAC,GACV,IAAMY,EAAaZ,EAAUtB,UAAUmC,QAAO,SAAC7B,GAAD,OAAUkB,SAASN,EAAQ1C,MAAQgD,SAASlB,EAAK9B,OAE/F,OADA0B,QAAQC,IAAI+B,GACL,CACHlC,UAAWkC,MAKnBd,KAAKC,UAAS,SAAAC,GAEV,MAAO,CACHrB,WAFeqB,EAAUrB,WAAWkC,QAAO,SAAC7B,GAAD,OAAUkB,SAASN,EAAQ1C,MAAQgD,SAASlB,EAAK9B,a,sBAS5G,WACI0B,QAAQC,IAAIiB,KAAKlD,MAAM0C,OACvBQ,KAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBV,OAAQU,EAAUV,UAEtBqB,WAAW/B,QAAQC,IAAIiB,KAAKlD,MAAM0C,OAAQ,O,oBAG9C,WAAU,IAAD,OAECwB,EAAMhB,KAAKlD,MAAM8B,UAAUK,KAAI,SAAAC,GACjC,OACI,cAAC,EAAD,CAEIzC,KAAMyC,EACNzB,aAAc,EAAKA,aACnBK,cAAe,EAAKA,eAHfoB,EAAK9B,OAQhB6D,EAAMjB,KAAKlD,MAAM+B,WAAWI,KAAI,SAAAC,GAClC,OACI,cAAC,EAAD,CAEIzC,KAAMyC,EACNzB,aAAc,EAAKA,aACnBK,cAAe,EAAKA,eAHfoB,EAAK9B,OAQtB,OAAK4C,KAAKlD,MAAM0C,MAsBPQ,KAAKlD,MAAM0C,MAChB,gCACI,6DACA,cAAC,EAAD,CAAeb,QAASqB,KAAKlD,MAAM6B,QAASC,UAAWoB,KAAKlD,MAAM8B,UAAWC,WAAYmB,KAAKlD,MAAM+B,aACpG,uBACA,wBAAQhB,QAASmC,KAAKL,SAAtB,0BALH,EArBD,sBAAK1C,UAAU,OAAf,UACI,+DACA,+CACA,cAAC,EAAD,CACIR,KAAMuD,KAAKlD,MAAM6B,QACjBlB,aAAcuC,KAAKvC,aACnBN,cAAe6C,KAAK7C,gBAExB,uBACA,4CACC6D,EACD,wBAAQnD,QAASmC,KAAKN,WAAYpC,KAAK,YAAvC,mBACA,uBACA,6CACC2D,EACD,wBAAQpD,QAASmC,KAAKN,WAAYpC,KAAK,aAAvC,mBACA,uBACA,wBAAQO,QAASmC,KAAKL,SAAtB,yB,GA9KGuB,IAAMC,W,MCRVC,MAXf,WACE,OACE,sBAAKnE,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,0CAEF,cAAC,EAAD,QCLNoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.91f1368d.chunk.js","sourcesContent":["import React from '../../node_modules/react'\nimport './General.css'\n\nconst General = (props) => {\n    const {\n        firstName, \n        lastName, \n        phone, \n        city, \n        state, \n        email,\n        personalStatement\n    } = props.data\n\n    return(\n        <div className=\"General\">\n            <form onSubmit={props.submitGeneral} id='generalForm'>\n                <label htmlFor='firstName'>First Name</label>\n                <input\n                    className='firstName'\n                    name=\"firstName\"\n                    value={firstName}\n                    onChange={props.handleChange}\n                    required\n                />\n                <label htmlFor='lastName'>Last Name</label>\n                <input\n                    className='lastName'\n                    name=\"lastName\"\n                    value={lastName}\n                    onChange={props.handleChange}\n                    required\n                />\n                <label htmlFor='city'>City</label>\n                <input\n                    className='city'\n                    name=\"city\"\n                    value={city}\n                    onChange={props.handleChange}\n                    required\n                />\n                <label htmlFor='state'>State</label>\n                <input\n                    className='state'\n                    name=\"state\"\n                    value={state}\n                    onChange={props.handleChange}\n                    required\n                />\n                <label htmlFor='phone'>Phone #</label>\n                <input\n                    className='phone'\n                    name=\"phone\"\n                    value={phone}\n                    onChange={props.handleChange}\n                    required\n                />\n                <label htmlFor='email'>Email</label>\n                <input\n                    className='email'\n                    name=\"email\"\n                    value={email}\n                    onChange={props.handleChange}\n                    required\n                />\n                <label htmlFor='personalStatement'>Personal Statement</label>\n                <textarea\n                    className='personalStatement'\n                    name=\"personalStatement\"\n                    value={personalStatement}\n                    onChange={props.handleChange}\n                    required\n                />\n            </form>\n        </div>\n    )\n}\n\nexport default General","import React from 'react'\nimport './Education.css'\n\nconst Education = (props) => {\n\n    return (\n        <div className=\"Education\">\n            <button\n                className=\"deleteBtn\"\n                name=\"education\"\n                data-id={props.data.id}\n                onClick={props.deleteSection}\n            >\n            X\n            </button>\n            <form id={props.data.id} className='eduForm'>\n                <label>School:</label>\n                <input\n                    name=\"school\"\n                    data-directory='education'\n                    data-index={props.data.id}\n                    value={props.data.school}\n                    onChange={props.handleChange}\n                />\n                \n                <label>Year Start:</label>\n                <input\n                    name=\"yearStart\"\n                    data-directory='education'\n                    data-index={props.data.id}\n                    value={props.data.yearStart}\n                    onChange={props.handleChange}\n                />\n                \n                <label>Year End:</label>\n                <input\n                    name=\"yearEnd\"\n                    data-directory='education'\n                    data-index={props.data.id}\n                    value={props.data.yearEnd}\n                    onChange={props.handleChange}\n                />\n                \n                <label>Level Completed:</label>\n                <input\n                    name=\"complete\"\n                    data-directory='education'\n                    data-index={props.data.id}\n                    value={props.data.complete}\n                    onChange={props.handleChange}\n                />\n            </form>\n        </div>\n    )\n}\n\nexport default Education","import React from '../../node_modules/react'\nimport './Experience.css'\n\nconst Experience = (props) => {\n    return (\n        <div className=\"Experience\">\n             <button\n            className =\"deleteBtn\"\n            name=\"experience\" \n            data-id={props.data.id}\n            onClick={props.deleteSection}\n            >X</button>\n            <form id={props.data.id} className='expForm'>\n                <label>Company:</label>\n                <input\n                    name=\"company\"\n                    data-directory='experience'\n                    data-id={props.data.id}\n                    value={props.data.company}\n                    onChange={props.handleChange}\n                />\n                \n                <label>Start Date:</label>\n                <input\n                    name=\"startDate\"\n                    data-directory='experience'\n                    data-id={props.data.id}\n                    value={props.data.startDate}\n                    onChange={props.handleChange}\n                />\n                \n                <label>End Date:</label>\n                <input\n                    name=\"endDate\"\n                    data-directory='experience'\n                    data-id={props.data.id}\n                    value={props.data.endDate}\n                    onChange={props.handleChange}\n                />\n                \n                <label>Responsibilities:</label>\n                <textarea\n                    name=\"responsibilities\"\n                    data-directory='experience'\n                    data-id={props.data.id}\n                    value={props.data.responsibilities}\n                    onChange={props.handleChange}\n                >\n                    \n                </textarea>\n            </form>\n        </div>\n    )\n}\n\nexport default Experience","import React from 'react'\nimport './CompletedForm.css'\n\nfunction CompletedForm(props) {\n\n    const { general, education, experience } = props\n    console.log(education)\n\n    return (\n        <div>\n            <div className=\"general\">\n                <h2>{general.firstName} {general.lastName}</h2>\n                <p>{general.phone}</p>\n                <p>{general.city}, {general.state}</p>\n                <p>{general.email}</p>\n                <p>{general.linkedIn}</p>\n                <p>{general.personalStatement}</p>\n            </div>\n            <div className=\"education\">\n                <h2>Education:</h2>\n                {education.map(item => {\n                    return (<div className='school' key={item.id}>\n                        <h3>{item.school}</h3>\n                        <p>{item.yearStart} - {item.yearEnd}</p>\n                        <p>{item.complete}</p>\n                    </div>)\n                })}\n            </div>\n            <div className=\"experience\">\n                <h2>Experience:</h2>\n                {experience.map(item => {\n                    return (<div className='company' key={item.id}>\n                        <h3>{item.company}</h3>\n                        <p>{item.startDate} - {item.endDate}</p>\n                        <p>{item.responsibilities}</p>\n                    </div>)\n                })}\n            </div>\n\n        </div>\n    )\n}\n\nexport default CompletedForm","import React from '../../node_modules/react'\nimport General from './General'\nimport Education from './Education'\nimport Experience from './Experience'\nimport CompletedForm from './CompletedForm'\n\n//Initialized state objects\nconst eduObj = {\n    id: 0,\n    school: \"\",\n    yearStart: \"\",\n    yearEnd: \"\",\n    complete: \"\"\n}\n\nconst expObj = {\n    id: 0,\n    company: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    responsibilities: \"\"\n}\n\nclass Main extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            general: {\n                firstName: \"\",\n                lastName: \"\",\n                phone: \"\",\n                city: \"\",\n                state: \"\",\n                email: \"\",\n                personalStatement: \"\"\n            },\n            education: [],\n            experience: [],\n            eduCount: 0,\n            expCount: 0,\n            saved: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n        // this.submitGeneral = this.submitGeneral.bind(this)\n        this.addSection = this.addSection.bind(this)\n        this.deleteSection = this.deleteSection.bind(this)\n        this.saveEdit = this.saveEdit.bind(this)\n    }\n\n    //Method for updating state with inputs from child components.\n    handleChange(event) {\n        const { name, value, dataset } = event.target\n        if (dataset.directory === 'education') {\n            this.setState(prevState => {\n                const newEduArray = prevState.education\n                newEduArray[parseInt(dataset.index)][name] = value\n                return {\n                    education: newEduArray\n                }\n            })\n            console.log(this.state)\n        }\n        else if (dataset.directory === 'experience') {\n            this.setState(prevState => {\n                const newExpArray = prevState.experience\n                newExpArray[parseInt(dataset.id)][name] = value\n                return {\n                    experience: newExpArray\n                }\n            })\n            console.log(this.state)\n        }\n        else this.setState(prevState => ({\n            general: {\n                ...prevState.general,\n                [name]: value\n            }\n        }))\n        console.log(this.state)\n    }\n\n    //Method for saving \"General\" section state\n    // submitGeneral(event) {\n    //     event.preventDefault()\n    //     const newInfo = this.state.general\n    //     this.setState({ general: newInfo })\n    //     setTimeout(() => console.log(this.state), 1000)\n    // }\n\n    //Method for adding a new \"Experience\" or \"Education\" section\n    addSection(event) {\n        const { name } = event.target\n        if (name === \"education\") {\n            this.setState(prevState => {\n                const newEduCount = prevState.eduCount + 1\n                const newEduObj = { ...eduObj }\n                newEduObj.id = prevState.eduCount\n                const newEduArr = [...prevState.education, newEduObj]\n                return {\n                    ...prevState,\n                    education: newEduArr,\n                    eduCount: newEduCount\n                }\n            })\n            console.log(this.state.eduCount)\n        }\n        else {\n            this.setState(prevState => {\n                const newExpCount = prevState.expCount + 1\n                const newExpObj = { ...expObj }\n                newExpObj.id = prevState.expCount\n                const newExpArr = [...prevState.experience, newExpObj]\n                return {\n                    ...prevState,\n                    experience: newExpArr,\n                    expCount: newExpCount\n                }\n            })\n            setTimeout(() => console.log(this.state), 1000)\n        }\n    }\n\n    //Method for deleting either \"Experience\" or \"Education\" section\n    deleteSection(event) {\n        console.log('deleted')\n        const { name, dataset } = event.target\n        console.log(dataset.id)\n        if (name === 'education') {\n            this.setState(prevState => {\n                const _newEduArr = prevState.education.filter((item) => parseInt(dataset.id) !== parseInt(item.id))\n                console.log(_newEduArr)\n                return {\n                    education: _newEduArr,\n                }\n            })\n        }\n        else {\n            this.setState(prevState => {\n                const _newExpArr = prevState.experience.filter((item) => parseInt(dataset.id) !== parseInt(item.id))\n                return {\n                    experience: _newExpArr,\n                }\n            })\n        }\n    }\n\n    //Method for updating the DOM with completed information.\n    saveEdit() {\n        console.log(this.state.saved)\n        this.setState(prevState => ({\n            saved: !prevState.saved\n        }))\n        setTimeout(console.log(this.state.saved), 1000)\n    }\n\n    render() {\n        //Looping through the education array in state\n        const edu = this.state.education.map(item => {\n            return (\n                <Education\n                    key={item.id}\n                    data={item}\n                    handleChange={this.handleChange}\n                    deleteSection={this.deleteSection}\n                />\n            )\n        })\n        //Looping through the experience array in state\n        const exp = this.state.experience.map(item => {\n            return (\n                <Experience\n                    key={item.id}\n                    data={item}\n                    handleChange={this.handleChange}\n                    deleteSection={this.deleteSection}\n                />\n            )\n        })\n        //If not saved yet, render input forms\n        if (!this.state.saved) return (\n            <div className='Main'>\n                <h4>Please provide the following:</h4>\n                <h3>General Info:</h3>\n                <General\n                    data={this.state.general}\n                    handleChange={this.handleChange}\n                    submitGeneral={this.submitGeneral}\n                />\n                <br />\n                <h3>Education:</h3>\n                {edu}\n                <button onClick={this.addSection} name=\"education\">Add +</button>\n                <br />\n                <h3>Experience:</h3>\n                {exp}\n                <button onClick={this.addSection} name=\"experience\">Add +</button>\n                <br />\n                <button onClick={this.saveEdit}>Save</button>\n            </div>\n        )\n        //If saved, render completed form\n        else if (this.state.saved) return (\n            <div>\n                <h2>Please review for accuracy:</h2>\n                <CompletedForm general={this.state.general} education={this.state.education} experience={this.state.experience}/>\n                <br />\n                <button onClick={this.saveEdit}>Edit</button>\n            </div>\n        )\n    }\n}\n\nexport default Main","import React from '../node_modules/react'\nimport Main from './components/Main'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className='App-header'>\n        <h1>CV App</h1>\n      </header>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}